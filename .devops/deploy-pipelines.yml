# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

#Create a unique name for the build based on your project requirements
#BuildID is the unique ID for the build
name: $(Year:yy).$(Month).$(DayOfMonth).$(BuildID)-$(SourceBranchName)

# variables set on azdevops to avoid circular dependency warning
# $(BLOB_CONTAINER_NAME)
variables:
  AgentImage: "ubuntu-latest"
  DockerRegistryServiceConnection: '$(DOCKER_REGISTRY_SERVICE_CONNECTION)'
  ImageRepository: '$(IMAGE_REPOSITORY)'
  ContainerRegistry: '$(CONTAINER_REGISTRY)'
  DockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  WebAppName: 'ppacorpsite-cms'
  Tag: '$(Build.BuildId)'

stages:
- stage: 'Build_Stage'
  displayName: 'Build'
  jobs:
  - job: 'Build_Job'
    displayName: 'Application Build'
    pool:
      vmImage: $(AgentImage)
    steps:
    - task: DownloadSecureFile@1
      name: envFile
      inputs:
        secureFile: '.env'
  
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Agent.TempDirectory)'
        Contents: '$(envFile.secureFilePath)'
        TargetFolder: '$(Build.SourcesDirectory)'
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(ImageRepository)
        dockerfile: $(DockerfilePath)
        containerRegistry: $(DockerRegistryServiceConnection)
        tags: |
          $(Tag)

- stage: 'UAT'
  displayName: 'UAT'
  dependsOn: ['Build_Stage']
  jobs:
  - deployment: Deploy_Uat
    displayName: UAT Deployment
    pool:
      vmImage: $(AgentImage)
    environment: UAT
    strategy:
      runOnce:
        deploy:
         steps:
         - task: AzureWebAppContainer@1
           inputs:
             appName: $(WebAppName)
             azureSubscription: $(UAT_AZURE_SUBSCRIPTION)
             imageName: '$(ContainerRegistry)/$(ImageRepository):$(Tag)'

# - stage: 'Production'
#   displayName: 'Production'
#   dependsOn: ['Build_Stage', 'Staging']
#   condition: eq(variables['Build.Reason'], 'Manual')
#   jobs:
#   - deployment: Deploy_Production
#     displayName: Production Deployment
#     pool:
#       vmImage: $(AgentImage)
#     environment: Production
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - download: current
#             artifact: 'app'
        
